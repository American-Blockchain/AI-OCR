name: AKS Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
  AZURE_CLUSTER_NAME: ${{ secrets.AZURE_CLUSTER_NAME }}
  ACR_NAME: ${{ secrets.ACR_NAME }}
  IMAGE_NAME: ai-ocr
  IMAGE_TAG: ${{ github.sha }}
  HELM_CHART_PATH: helm/ai-ocr

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: ACR Login
      uses: docker/login-action@v3
      with:
        registry: ${{ env.ACR_NAME }}.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker build -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} -f docker_build/Dockerfile .
        docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

    - name: Set up Kubeconfig for AKS
      uses: azure/aks-set-context@v4
      with:
        resource-group: ${{ env.AZURE_RESOURCE_GROUP }}
        cluster-name: ${{ env.AZURE_CLUSTER_NAME }}
        
    - name: Install Helm
      uses: azure/setup-helm@v4

    - name: Deploy to AKS with Helm
      run: |
        helm upgrade --install ${{ env.IMAGE_NAME }} ${{ env.HELM_CHART_PATH }} \
          --set image.repository="${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}" \
          --set image.tag="${{ env.IMAGE_TAG }}" \
          --wait \
          --timeout 5m
      env:
        KUBECONFIG: ${{ steps.aks-set-context.outputs.kubeconfig }}
