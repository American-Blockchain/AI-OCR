# AKS Deployment Workflow
# 
# Required GitHub Secrets:
# - CLIENT_ID: Azure Service Principal Client ID
# - TENANT_ID: Azure Tenant ID  
# - SP_PASSWORD: Azure Service Principal Client Secret
# - AZURE_RESOURCE_GROUP: Azure Resource Group name
# - AZURE_CLUSTER_NAME: AKS Cluster name
# - ACR_NAME: Azure Container Registry name
#
# Service Connection Name: aiocr-connection

name: AKS Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
  AZURE_CLUSTER_NAME: ${{ secrets.AZURE_CLUSTER_NAME }}
  ACR_NAME: ${{ secrets.ACR_NAME }}
  IMAGE_NAME: ai-ocr
  IMAGE_TAG: ${{ github.sha }}
  HELM_CHART_PATH: helm/ai-ocr

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Azure Login (Service Principal)
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.CLIENT_ID }}
        tenant-id: ${{ secrets.TENANT_ID }}
        client-secret: ${{ secrets.SP_PASSWORD }}

    - name: Verify Azure login
      run: az account show

    - name: ACR Login (via az)
      run: |
        az acr login --name ${{ env.ACR_NAME }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: docker_build/Dockerfile
        push: true
        tags: ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

    - name: Set up Kubeconfig for AKS
      id: aks-set-context
      uses: azure/aks-set-context@v4
      with:
        resource-group: ${{ env.AZURE_RESOURCE_GROUP }}
        cluster-name: ${{ env.AZURE_CLUSTER_NAME }}
        
    - name: Export KUBECONFIG (make kubeconfig available to later steps)
      if: steps.aks-set-context.outputs.kubeconfig != ''
      run: |
        echo "${{ steps.aks-set-context.outputs.kubeconfig }}" > kubeconfig
        echo "KUBECONFIG=$PWD/kubeconfig" >> $GITHUB_ENV

    - name: Install Helm
      uses: azure/setup-helm@v4

    - name: Deploy to AKS with Helm
      run: |
        helm upgrade --install ${{ env.IMAGE_NAME }} ${{ env.HELM_CHART_PATH }} \
          --set image.repository="${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}" \
          --set image.tag="${{ env.IMAGE_TAG }}" \
          --wait \
          --timeout 5m

    - name: Debug - List all pods
      run: |
        kubectl get pods --all-namespaces
