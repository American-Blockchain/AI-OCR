# Azure DevOps Pipeline for AKS Deployment
# This pipeline builds the Docker image, pushes it to Azure Container Registry (ACR), 
# and deploys the Helm chart to Azure Kubernetes Service (AKS).

trigger:
- main

variables:
  # Replace with your values
  - name: azureSubscription
    value: 'REPLACE_WITH_YOUR_AZURE_SERVICE_CONNECTION_NAME'
  - name: resourceGroupName
    value: 'REPLACE_WITH_YOUR_RESOURCE_GROUP'
  - name: aksClusterName
    value: 'REPLACE_WITH_YOUR_AKS_CLUSTER_NAME'
  - name: acrName
    value: 'REPLACE_WITH_YOUR_ACR_NAME'
  - name: imageRepository
    value: 'ai-ocr'
  - name: dockerfilePath
    value: 'docker_build/Dockerfile'
  - name: helmChartPath
    value: 'helm/ai-ocr'
  - name: tag
    value: '$(Build.SourceVersion)'

stages:
- stage: Build
  displayName: Build and Push Image
  jobs:
  - job: Build
    displayName: Build Job
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      displayName: Build and push image
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(acrName) # Assumes a Docker Registry Service Connection is configured with this name
        tags: |
          $(tag)
          latest

- stage: Deploy
  displayName: Deploy to AKS
  jobs:
  - job: Deploy
    displayName: Deploy Job
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureCLI@2
      displayName: 'Get AKS Credentials'
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az aks get-credentials --resource-group $(resourceGroupName) --name $(aksClusterName) --admin --file $(Agent.TempDirectory)/kubeconfig
      env:
        KUBECONFIG: $(Agent.TempDirectory)/kubeconfig

    - task: HelmInstaller@1
      displayName: 'Install Helm'
      inputs:
        helmVersionToInstall: 'latest'

    - task: HelmDeploy@0
      displayName: 'Helm Upgrade/Install'
      inputs:
        connectionType: 'None'
        namespace: 'default'
        command: 'upgrade'
        chartType: 'FilePath'
        chartPath: '$(helmChartPath)'
        releaseName: '$(imageRepository)'
        valueOverrides: |
          image.repository=$(acrName).azurecr.io/$(imageRepository)
          image.tag=$(tag)
        arguments: '--install --wait --timeout 5m'
      env:
        KUBECONFIG: $(Agent.TempDirectory)/kubeconfig
